openapi: 3.0.0
info:
  title: Jaipur
  version: '1.0'
  description: API pour le jeu de société Jaipur
  contact:
    name: Julien Usson
    email: julien@usson.me
    url: 'https://cours.usson.me'
servers:
  - url: 'http://localhost:3000'
    description: Local
tags:
  - name: Game
    description: Everything about game
  - name: Health
    description: Everything about process health
paths:
  /games:
    post:
      summary: Créer une partie
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/game.yaml
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/create-game.yaml
      operationId: createGame
      tags:
        - Game
    parameters: []
    get:
      summary: Récupérer toutes les parties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/game-preview.yaml
      description: ''
      parameters: []
      tags:
        - Game
      operationId: findAllActiveGames
  '/games/{gameId}':
    get:
      summary: Récupérer une partie
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/game.yaml
        '404':
          description: Game not found.
      operationId: findOneGameById
      tags:
        - Game
    parameters:
      - schema:
          type: integer
        name: gameId
        in: path
        required: true
    delete:
      summary: Supprimer une partie
      operationId: deleteGameById
      responses:
        '200':
          description: OK
      tags:
        - Game
  /health:
    get:
      summary: Récupérer le status de l'application
      tags:
        - Health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/healthstatus.yaml
      description: ''
      operationId: getHealth
  '/games/{gameId}/players/{playerId}/take-good':
    parameters:
      - schema:
          type: integer
        name: gameId
        in: path
        required: true
      - schema:
          type: integer
        name: playerId
        in: path
        required: true
    post:
      summary: Prendre 1 seule marchandise
      operationId: takeGood
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/game.yaml
      parameters: []
      tags:
        - Game
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/take-good-payload.yaml
  '/games/{gameId}/players/{playerId}/exchange':
    parameters:
      - schema:
          type: integer
        name: gameId
        in: path
        required: true
      - schema:
          type: integer
        name: playerId
        in: path
        required: true
    post:
      summary: Prendre plusieurs marchandises
      operationId: exchange
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/game.yaml
      parameters: []
      tags:
        - Game
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/exchange-payload.yaml
  '/games/{gameId}/players/{playerId}/take-camels':
    parameters:
      - schema:
          type: integer
        name: gameId
        in: path
        required: true
      - schema:
          type: integer
        name: playerId
        in: path
        required: true
    post:
      summary: Prendre les chameaux
      operationId: takeCamels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/game.yaml
      parameters: []
      tags:
        - Game
  '/games/{gameId}/players/{playerId}/sell':
    parameters:
      - schema:
          type: integer
        name: gameId
        in: path
        required: true
      - schema:
          type: integer
        name: playerId
        in: path
        required: true
    post:
      summary: Vendre des cartes
      operationId: sell
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/game.yaml
      parameters:
        - schema:
            type: number
          in: header
          name: playerIndex
          required: true
          description: Index du joueur
      tags:
        - Game
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/sell-payload.yaml
components:
  schemas: {}
